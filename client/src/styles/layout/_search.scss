.search {
  position: relative;
  width: 100vw;
  height: 100vh;
  background-color: color(white);
  // We add this scroll here in order to not have any jumpy transitions during
  // the transition from react-router-transition
  overflow: hidden;

  @include bp(M) {
    width: 100%;
    height: 100vh;
  }

  .btn-container {
    // Make room for searchbar on bottom
    bottom: 8rem;

    // Searchbar has enough space, bring back to bottom
    @include bp(XS) {
      bottom: 0;
    }
  }

  &__form {
    position: fixed;
    right: 50%;
    bottom: 3rem;

    width: 90%;
    height: 5rem;
    transform: translateX(50%);

    @include bp(XS) {
      // align center with buttons
      bottom: 2.5rem;
      // Shorten so buttons have room
      width: 60%;
    }

    // Move searchbar from bottom to top since we don't
    // need to account for thumbs on mobile devices
    @include bp(M) {
      position: relative;
      display: flex;
      align-items: center;
      justify-content: space-around;
      top: 0;
      right: 0;
      width: 100%;
      transform: none;
      background-color: #fff;
      box-shadow: shadow(medium);
    }
  }

  &__input {
    width: 100%;
    height: 100%;
    padding: padding(S) padding(M);

    border: 2px solid color(black);
    border-radius: radius(small);
    box-shadow: shadow(medium);
    color: color(black);
    font-size: 2rem;

    @include bp(M) {
      width: 80%;
      border: none;
      box-shadow: none;
    }
  }

  // Gives us space at the bottom of every page for the 
  // back button without needing to create a new padding
  // variable that is much bigger than the others.
  &::after {
    display: block;
    width: 1rem;
    height: 15rem;
    content: '';
  }
}

.search-results {
  display: flex;
  height: 100vh;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  overflow-y: scroll;

  // Temporarily wrap elements for screens that 
  // are wider than mobile but not wide enough
  // for desktop layout
  @include bp(S) {
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-around;
  }

  // Expand back for desktop layout
  @include bp(M) {
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: start;
  }

  .loadingIcon {
    color: color(black);
  }

}
